apply plugin: 'idea'

idea {
    module {
        testOutputDir = file('build/test-classes/debug')
    }
}

task renameAarForRelease(type: Copy, dependsOn: build) {
    description = "Rename the aar for easy release publishing"

    from "$buildDir/outputs/aar/" //${project.name}-release.aar
    into "$buildDir/outputs/aar/" //${project.name}-${project.version}.aar"
    include "${project.name}-release.aar"
    rename { String fileName ->
        fileName = "${project.name}-${project.version}.aar"
    }
}

task distribution(dependsOn: [build, clean, renameAarForRelease]) {
    doLast {
        println "Building with version=$version"
    }
}

task release(dependsOn: 'distribution') {
    doLast {
        println('Doing release build')
    }
}

android.libraryVariants.all { variant ->

    task("generate${variant.name}Javadoc", type: Javadoc) {
        title = "Android Beacon Library $version API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar =
                "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        //Refer to https://stackoverflow.com/a/50833438/4068957
        doFirst { classpath = files(variant.javaCompile.classpath.files, ext.androidJar)}
        options.linksOffline "http://d.android.com/reference/", "${android.sdkDirectory}/docs/reference"
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

build.mustRunAfter clean

apply from: '../gradle/credentials.gradle'
apply from: '../gradle/compile.gradle'
apply from: '../gradle/publishing.gradle'
apply from: '../gradle/bintray.gradle'
apply from: '../gradle/artifactory.gradle'

artifactoryPublish {
    // Skip deploying to artifactory if building a pull request
    onlyIf { !isSnapPullRequest }
}
